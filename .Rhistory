zoo::as.Date(as.numeric(time(toRegularTS(ldts, ldts, fun='max', resol = tempRes))))
library(lubridate)
lubridate::as.Date(as.numeric(time(toRegularTS(ldts, ldts, fun='max', resol = tempRes))))
tsi <- toRegularTS(ldts, ldts, fun='max', resol = tempRes)
as.Date(date_decimal(as.numeric(tsi)))
date_decimal(as.numeric(tsi))
as.numeric(tsi)
as.Date(as.numeric(time(tsi)))
time(tsi)
as.Date(time(tsi))
as.numeric(tsi)
as.Date(as.numeric(tsi))
dtsbr <- as.Date(as.numeric(toRegularTS(ldts, ldts, fun='max', resol = tempRes)))
dtsbr
tsi
time(tsi)
as.numeric(time(tsi))
as.Date(as.numeric(time(tsi)))
as.yearmon(time(tsi))
tsi
time(tsi)
tempRes
tsi
plot(tsi)
z <- zoo(ldts, ldts) ## create a zoo (time) series
mz <- as.ts(aggregate(z, as.yearmon, mmax))
z
aggregate(z, as.yearmon, mmax)
as.ts(aggregate(z, as.yearmon, mmax))
time(tsi)
date_decimal(tsi)
date_decimal(time(tsi))
date_decimala(time(tsi))
date_decimal(as.numeric(time(tsi)))
tsi
date_decimal(as.numeric(tsi))
ldts
aggregate(z, as.yearmon, mmax)
ldtsi <- c(ldts, as.Date('2001-04-05'))
z <- zoo(ldtsi, ldtsi) ## create a zoo (time) series
mz <- as.ts(aggregate(z, as.yearmon, mmax))
mz
as.Date(toRegularTS(ldtsi, ldtsi, fun='max', resol = tempRes))
# load fire data
fimg <- list.files(file.path(forcefolder,l2folder),'fire_X')
fst <- stack(fimg)
fst <- stack(file.path(forcefolder,l2folder),fimg))
fst <- stack(file.path(forcefolder,l2folder),fimg)
fst <- stack(file.path(forcefolder,l2folder,fimg))
fst
plot(fst[[1]])
plot(fst[[100]])
tsf <- stack(file.path(forcefolder,l2folder,fimg))
fimg
# assign dates to stack
dtsf <- as.Date(fimg,'fire_X%y_%m_%d.tif')
# assign dates to stack
dtsf <- as.Date(fimg,'fire_X%Y_%m_%d.tif')
tsf <- stack(file.path(forcefolder,l2folder,fimg))
dtsf <- as.Date
names(tsf) <- dtsf
tsf
# assign dates to stack
dtsf <- as.Date(fimg,'fire_X%Y_%m_%d.tif')
names(tsf) <- dtsf
tsf
dtsfr <- as.Date(fimg,'fire_X%Y_%m_%d.tif')
names(tsf) <- dtsfr
dtsfr
startdt <- max(c(min(dtsbr), min(dtsfr)))
enddt  <- min(c(max(dtsbr), max(dtsfr)))
startdt
enddt
min(dtsfr)
max(dtsfr)
starttime <- c(1998,1,01)#start date: year, month, day
endtime <- c(2018,12,01)#end date: year, month, day
as.Date(toRegularTS(c(startyr, dtsfr, endyr), c(startyr, dtsfr, endyr), fun='max', resol = tempRes))
startyr <- as.Date(paste0(starttime[1],'-',starttime[2],'-',starttime[3]))
endyr <- as.Date(paste0(endtime[1],'-',endtime[2],'-',endtime[3]))
dtstot <- as.Date(toRegularTS(c(startyr, dtsfr, endyr), c(startyr, dtsfr, endyr), fun='max', resol = tempRes))
starttime <- c(1998,1,01)#start date: year, month, day
endtime <- c(2018,12,01)#end date: year, month, day
startyr <- as.Date(paste0(starttime[1],'-',starttime[2],'-',starttime[3]))
endyr <- as.Date(paste0(endtime[1],'-',endtime[2],'-',endtime[3]))
dtstot <- as.Date(toRegularTS(c(startyr, dtsfr, endyr), c(startyr, dtsfr, endyr), fun='max', resol = tempRes))
as.Date(toRegularTS(c(startyr, dtsfr, endyr), c(startyr, dtsfr, endyr), fun='max', resol = tempRes))
dtstot
rstNA <- st[[1]]
rstNA[] <- NA
startyr <- as.Date(paste0(starttime[1],'-',starttime[2],'-',starttime[3]))
endyr <- as.Date(paste0(endtime[1],'-',endtime[2],'-',endtime[3]))
dtstot <- as.Date(toRegularTS(c(startyr, dtsfr, endyr), c(startyr, dtsfr, endyr), fun='max', resol = tempRes))
rstNA <- tsbr[[1]]
rstNA[] <- NA
startyr <- as.Date(paste0(starttime[1],'-',starttime[2],'-',starttime[3]))
endyr <- as.Date(paste0(endtime[1],'-',endtime[2],'-',endtime[3]))
dtstot <- as.Date(toRegularTS(c(startyr, dtsfr, endyr), c(startyr, dtsfr, endyr), fun='max', resol = tempRes))
rstNA <- tsbr[[1]]
rstNA[] <- NA
startyr <- as.Date(paste0(starttime[1],'-',starttime[2],'-',starttime[3]))
endyr <- as.Date(paste0(endtime[1],'-',endtime[2],'-',endtime[3]))
dtstot <- as.Date(toRegularTS(c(startyr, dtsfr, endyr), c(startyr, dtsfr, endyr), fun='max', resol = tempRes))
tsNBR <- tsbr
npre <- sum(dtstot<min(dtsfr))
npost <- sum(dtstot>max(dtsfr))
npre
npost
dtstot
npre <- sum(dtstot<min(dtsbr))
npost <- sum(dtstot>max(dtsbr))
npre
npost
knitr::opts_chunk$set(echo = TRUE, eval=F)
library(raster)
# library(ff)
library(UpscaleRecovery)
library(stars)
library(raster)
# library(ff)
library(UpscaleRecovery)
library(stars)
library(devtools)
document()
install()
library(testthat)
BinToDec(1,0)
BinToDec(c(1,0))
BinToDec(c(1,0,1))
getQAvals(valid = c(0,1), aero = c(0,3))
vals <- getQAvals(valid = c(0,1), aero = c(0,3))
exp <- c(getQA(), getQA(valid = 1), getQA(aero = 3), getQA(valid = 1, aero = 3))
expect_equal(vals, exp)
im <- raster(values = 1:12, nrows = 3, ncols = 4)
library(raster)
im <- raster(values = 1:12, nrows = 3, ncols = 4)
?raster
im <- raster(vals = 1:12, nrows = 3, ncols = 4)
qaim <- raster(vals = c(0, 1, 5, 9, 11, 12, 144, 188, 966, 1255, 28672, 28795), nrows = 3, ncols = 4)
int2Bit
int2Bits( c(0, 1, 5, 9, 11, 12, 144, 188, 966, 1255, 28672, 28795))
intToBits( c(0, 1, 5, 9, 11, 12, 144, 188, 966, 1255, 28672, 28795))
intToBits( 5)
getQAvals(valid = 0, cloud = c(0,1), shadow = 0, snow = 0, water = 0, aero = c(0,1), subzero = 0, sat = 0, sunZen = 0, illum = 0, slope = 0, wvp = 0)
getQAvals(valid = 0, cloud = c(0,1), shadow = 0, snow = 0, water = 0, aero = c(0,1), subzero = 0, sat = 0, sunZen = 0, illum = 0, slope = c(0,1), wvp = 0)
qaim <- raster(vals = c(0, 1, 4, 9, 11, 12, 128, 132, 966, 8192, 8324, 28795), nrows = 3, ncols = 4)
mskd <- mskQA(im, qaim, valid = 0, cloud = c(0,1), shadow = 0, snow = 0, water = 0, aero = c(0,1), subzero = 0, sat = 0, sunZen = 0, illum = 0, slope = 0, wvp = 0)
mskd[]
exp <- c(1,NA,3,NA,NA,NA,7,8,NA,10,11,NA)
expect_equal(mskd, exp)
mskd
expect_equal(mskd[], exp)
mskd <- mskQA(im, qaim, valid = 0, cloud = c(0,1), shadow = 0, snow = 0, water = 0, aero = c(0,1), subzero = 0, sat = 0, sunZen = 0, illum = 0, slope = c(0,1), wvp = 0)
exp <- c(1,NA,3,NA,NA,NA,7,8,NA,10,11,NA)
expect_equal(mskd[], exp)
r1 <- raster(vals = 1:12, nrows = 3, ncols = 4)
r2 <- raster(vals = 13:24, nrows = 3, ncols = 4)
r3 <- raster(vals = 25:36, nrows = 3, ncols = 4)
r4 <- raster(vals = 37:48, nrows = 3, ncols = 4)
st <- stack(r1,r2,r3,r4)
seq(as.Date('2000-01-01'), as.Date('2000-04-01'), by = '1month')
?seq
seq(as.Date('2000-01-01'), as.Date('2000-04-01'), along.with = '1month')
seq(as.Date('2000-01-01'), as.Date('2000-04-01'), along.with = '1 month')
seq(as.Date('2000-01-01'), as.Date('2000-04-01'), by = '1 month')
dts <- seq(as.Date('2000-01-01'), as.Date('2000-04-01'), by = '1 month')
r1 <- raster(vals = 1:12, nrows = 3, ncols = 4)
r2 <- raster(vals = 13:24, nrows = 3, ncols = 4)
r3 <- raster(vals = 25:36, nrows = 3, ncols = 4)
r4 <- raster(vals = 37:48, nrows = 3, ncols = 4)
st <- stack(r1,r2,r3,r4)
tempRes <- 'monthly'
dts <- seq(as.Date('2000-01-01'), as.Date('2000-04-01'), by = '1 month')
starttime <- c(1999,8,1)
endtime <- c(2001,1,1)
st1 <- setPeriod(st, starttime, endtime,tempRes, dts)
st1 <- setPeriod(st, starttime, endtime,tempRes, dts)
setPeriod <- function(br, starttime, endtime,tempRes, dtsbr){
# make sure that image stack covers time period of interest
rstNA <- br[[1]]
rstNA[] <- NA # empty image
startyr <- as.Date(paste0(starttime[1],'-',starttime[2],'-',starttime[3])) # create date object from start date
endyr <- as.Date(paste0(endtime[1],'-',endtime[2],'-',endtime[3]))# create date object from end date
dtstot <- as.Date(toRegularTS(c(startyr, dtsbr, endyr), c(startyr, dtsbr, endyr), fun='max', resol = tempRes))# all dates that should be covered in study period
out <- br
npre <- sum(dtstot<min(dtsbr))# missing dates at the start of the study period
npost <- sum(dtstot>max(dtsbr))# missing dates at the end of the study period
if(npre>0){for(i in 1:npre){out <- addLayer(rstNA, out)}}else{# add observations at the beginning if needed
# remove observations before the start of the study period if needed
ind <- which(dtsbr>=min(dtstot))
out <- out[[ind]]
}
if(npost>0){for(i in 1:npost){out <- addLayer(out,rstNA)}}else{# add observations at the end if needed
# remove observations after the end of the study period if needed
ind <- which(dtsbr<=max(dtstot))
out <- out[[ind]]
}
names(out) <- dtstot
return(out)
}
st1 <- setPeriod(st, starttime, endtime,tempRes, dts)
setPeriod(st, starttime, endtime,tempRes, dts)
setPeriod(st, starttime, endtime,tempRes, dts)
br <- st
st
dtsbr <- dts
rstNA <- br[[1]]
rstNA[] <- NA # empty image
startyr <- as.Date(paste0(starttime[1],'-',starttime[2],'-',starttime[3])) # create date object from start date
endyr <- as.Date(paste0(endtime[1],'-',endtime[2],'-',endtime[3]))# create date object from end date
startyr
dtstot <- as.Date(toRegularTS(c(startyr, dtsbr, endyr), c(startyr, dtsbr, endyr), fun='max', resol = tempRes))# all dates that should be covered in study period
toRegularTS(c(startyr, dtsbr, endyr), c(startyr, dtsbr, endyr), fun='max', resol = tempRes)
dtsbr
as.Date(toRegularTS(c(startyr, dtsbr, endyr), c(startyr, dtsbr, endyr), fun='max', resol = tempRes))
time(toRegularTS(c(startyr, dtsbr, endyr), c(startyr, dtsbr, endyr), fun='max', resol = tempRes))
as.numeric(time(toRegularTS(c(startyr, dtsbr, endyr), c(startyr, dtsbr, endyr), fun='max', resol = tempRes)))
as.Date(as.numeric(time(toRegularTS(c(startyr, dtsbr, endyr), c(startyr, dtsbr, endyr), fun='max', resol = tempRes))))
date_decimal(as.numeric(time(toRegularTS(c(startyr, dtsbr, endyr), c(startyr, dtsbr, endyr), fun='max', resol = tempRes))))
library(lubridate)
date_decimal(as.numeric(time(toRegularTS(c(startyr, dtsbr, endyr), c(startyr, dtsbr, endyr), fun='max', resol = tempRes))))
dtstot <- as.Date(toRegularTS(c(startyr, dtsbr, endyr), c(startyr, dtsbr, endyr), fun='max', resol = tempRes))# all dates that should be covered in study period
document()
rm(setPeriod)
document()
install()
library(UpscaleRecovery)
r1 <- raster(vals = 1:12, nrows = 3, ncols = 4)
r2 <- raster(vals = 13:24, nrows = 3, ncols = 4)
r3 <- raster(vals = 25:36, nrows = 3, ncols = 4)
r4 <- raster(vals = 37:48, nrows = 3, ncols = 4)
st <- stack(r1,r2,r3,r4)
tempRes <- 'monthly'
dts <- seq(as.Date('2000-01-01'), as.Date('2000-04-01'), by = '1 month')
starttime <- c(1999,8,1)
endtime <- c(2001,1,1)
st1 <- setPeriod(st, starttime, endtime,tempRes, dts)
rstNA <- br[[1]]
rstNA[] <- NA # empty image
startyr <- as.Date(paste0(starttime[1],'-',starttime[2],'-',starttime[3])) # create date object from start date
endyr <- as.Date(paste0(endtime[1],'-',endtime[2],'-',endtime[3]))# create date object from end date
dtstot <- date_decimal(as.numeric(time(toRegularTS(c(startyr, dtsbr, endyr), c(startyr, dtsbr, endyr), fun='max', resol = tempRes))))# all dates that should be covered in study period
dtstot
startyr
endyr
out <- br
npre <- sum(dtstot<min(dtsbr))# missing dates at the start of the study period
npost <- sum(dtstot>max(dtsbr))# missing dates at the end of the study period
npre
npost
if(npre>0){for(i in 1:npre){out <- addLayer(rstNA, out)}}else{# add observations at the beginning if needed
# remove observations before the start of the study period if needed
ind <- which(dtsbr>=min(dtstot))
out <- out[[ind]]
}
if(npost>0){for(i in 1:npost){out <- addLayer(out,rstNA)}}else{# add observations at the end if needed
# remove observations after the end of the study period if needed
ind <- which(dtsbr<=max(dtstot))
out <- out[[ind]]
}
out
br
dtstot
dtsbr
dtstot>max(dtsbr)
dtstot <- as.Date(dtstot)
dtstot
npre <- sum(dtstot<min(dtsbr))# missing dates at the start of the study period
npost <- sum(dtstot>max(dtsbr))# missing dates at the end of the study period
npost
install()
library(UpscaleRecovery)
setPeriod(st, starttime, endtime,tempRes, dts)
st1 <- setPeriod(st, starttime, endtime,tempRes, dts)
st1[1]
starttime <- c(2000,2,1)
endtime <- c(2000,3,1)
st1 <- setPeriod(st, starttime, endtime,tempRes, dts)
starttime <- c(2000,2,1)
endtime <- c(2000,3,1)
st2 <- setPeriod(st, starttime, endtime,tempRes, dts)
st2
starttime <- c(2000,2,1)
endtime <- c(2000,3,1)
st2 <- setPeriod(st, starttime, endtime,tempRes, dts)
st2
dts
br <-st
dtsbr <- st
rstNA <- br[[1]]
rstNA[] <- NA # empty image
startyr <- as.Date(paste0(starttime[1],'-',starttime[2],'-',starttime[3])) # create date object from start date
endyr <- as.Date(paste0(endtime[1],'-',endtime[2],'-',endtime[3]))# create date object from end date
dtstot <- date_decimal(as.numeric(time(toRegularTS(c(startyr, dtsbr, endyr), c(startyr, dtsbr, endyr), fun='max', resol = tempRes))))# all dates that should be covered in study period
dtstot <- as.Date(dtstot)
ut <- br
npre <- sum(dtstot<min(dtsbr))# missing dates at the start of the study period
npost <- sum(dtstot>max(dtsbr))# missing dates at the end of the study period
out <- br
npre <- sum(dtstot<min(dtsbr))# missing dates at the start of the study period
npost <- sum(dtstot>max(dtsbr))# missing dates at the end of the study period
npre
sum(dtstot<min(dtsbr))
dtstot
startyr
endyr
dtstot <- date_decimal(as.numeric(time(toRegularTS(c(startyr, dtsbr, endyr), c(startyr, dtsbr, endyr), fun='max', resol = tempRes))))# all dates that should be covered in study period
starttime <- c(2000,2,1)
endtime <- c(2000,4,1)
st2 <- setPeriod(st, starttime, endtime,tempRes, dts)
st2
starttime <- c(2000,2,1)
endtime <- c(2000,5,1)
st2 <- setPeriod(st, starttime, endtime,tempRes, dts)
st2
tres <- c('1 month', '3 months', '1 day', '1 year')
names(tres) <- c('monthly', 'quarterly', 'daily', 'yearly')
seq(startyr, endyr, by = tres[tempRes])
startyr
startyr
endyr
seq(startyr, endyr, by = '1 day')
seq(startyr, endyr, by = '3 months')
seq(startyr, endyr, by = '1 year')
install()
install()
starttime <- c(2000,2,1)
endtime <- c(2000,3,1)
st2 <- setPeriod(st, starttime, endtime,tempRes, dts)
st2
starttime <- c(2000,2,1)
endtime <- c(2000,3,1)
tres <- c('1 month', '3 months', '1 day', '1 year')
names(tres) <- c('monthly', 'quarterly', 'daily', 'yearly')
# make sure that image stack covers time period of interest
rstNA <- br[[1]]
rstNA[] <- NA # empty image
startyr <- as.Date(paste0(starttime[1],'-',starttime[2],'-',starttime[3])) # create date object from start date
endyr <- as.Date(paste0(endtime[1],'-',endtime[2],'-',endtime[3]))# create date object from end date
dtstot <- seq(startyr, endyr, by = tres[tempRes])
dtstot
out <- br
npre <- sum(dtstot<min(dtsbr))# missing dates at the start of the study period
npost <- sum(dtstot>max(dtsbr))# missing dates at the end of the study period
dtstot
dtsbr
dts <- seq(as.Date('2000-01-01'), as.Date('2000-04-01'), by = '1 month')
dtsbr <- dts
st2 <- setPeriod(st, starttime, endtime,tempRes, dts)
tres <- c('1 month', '3 months', '1 day', '1 year')
names(tres) <- c('monthly', 'quarterly', 'daily', 'yearly')
# make sure that image stack covers time period of interest
rstNA <- br[[1]]
rstNA[] <- NA # empty image
startyr <- as.Date(paste0(starttime[1],'-',starttime[2],'-',starttime[3])) # create date object from start date
endyr <- as.Date(paste0(endtime[1],'-',endtime[2],'-',endtime[3]))# create date object from end date
dtstot <- seq(startyr, endyr, by = tres[tempRes])
out <- br
npre <- sum(dtstot<min(dtsbr))# missing dates at the start of the study period
npost <- sum(dtstot>max(dtsbr))# missing dates at the end of the study period
npre
npost
if(npre>0){for(i in 1:npre){out <- addLayer(rstNA, out)}}else{# add observations at the beginning if needed
# remove observations before the start of the study period if needed
ind <- which(dtsbr>=min(dtstot))
out <- out[[ind]]
}
out
if(npost>0){for(i in 1:npost){out <- addLayer(out,rstNA)}}else{# add observations at the end if needed
# remove observations after the end of the study period if needed
ind <- which(dtsbr<=max(dtstot))
out <- out[[ind]]
}
out
out <- br
npre <- sum(dtstot<min(dtsbr))# missing dates at the start of the study period
npost <- sum(dtstot>max(dtsbr))# missing dates at the end of the study period
if(npre>0){for(i in 1:npre){out <- addLayer(rstNA, out)}}else{# add observations at the beginning if needed
# remove observations before the start of the study period if needed
ind <- which(dtsbr>=min(dtstot))
dtsbr <- dtsbr[ind]
out <- out[[ind]]
}
dtsbr
out
if(npost>0){for(i in 1:npost){out <- addLayer(out,rstNA)}}else{# add observations at the end if needed
# remove observations after the end of the study period if needed
ind <- which(dtsbr<=max(dtstot))
out <- out[[ind]]
}
out
install()
install()
starttime <- c(2000,2,1)
endtime <- c(2000,3,1)
st2 <- setPeriod(st, starttime, endtime,tempRes, dts)
exp <- c(NA, NA, NA, NA, NA, 1, 13, 25, 37, NA, NA, NA, NA, NA, NA, NA, NA, NA)
expect_equal(as.numeric(st2[1]), exp)
st2
install()
library(UpscaleRecovery)
starttime <- c(2000,2,1)
endtime <- c(2000,3,1)
st2 <- setPeriod(st, starttime, endtime,tempRes, dts)
est_that("change time span of raster stack", {
r1 <- raster(vals = 1:12, nrows = 3, ncols = 4)
r2 <- raster(vals = 13:24, nrows = 3, ncols = 4)
r3 <- raster(vals = 25:36, nrows = 3, ncols = 4)
r4 <- raster(vals = 37:48, nrows = 3, ncols = 4)
st <- stack(r1,r2,r3,r4)
tempRes <- 'monthly'
dts <- seq(as.Date('2000-01-01'), as.Date('2000-04-01'), by = '1 month')
starttime <- c(1999,8,1)
endtime <- c(2001,1,1)
st1 <- setPeriod(st, starttime, endtime,tempRes, dts)
exp <- c(NA, NA, NA, NA, NA,  1, 13, 25, 37, NA, NA, NA, NA, NA, NA, NA, NA, NA)
expect_equal(as.numeric(st1[1]), exp)
starttime <- c(2000,2,1)
endtime <- c(2000,3,1)
st2 <- setPeriod(st, starttime, endtime,tempRes, dts)
st2
r1 <- raster(vals = 1:12, nrows = 3, ncols = 4)
r2 <- raster(vals = 13:24, nrows = 3, ncols = 4)
r3 <- raster(vals = 25:36, nrows = 3, ncols = 4)
r4 <- raster(vals = 37:48, nrows = 3, ncols = 4)
st <- stack(r1,r2,r3,r4)
tempRes <- 'monthly'
dts <- seq(as.Date('2000-01-01'), as.Date('2000-04-01'), by = '1 month')
#
starttime <- c(1999,8,1)
endtime <- c(2001,1,1)
st1 <- setPeriod(st, starttime, endtime,tempRes, dts)
exp <- c(NA, NA, NA, NA, NA,  1, 13, 25, 37, NA, NA, NA, NA, NA, NA, NA, NA, NA)
expect_equal(as.numeric(st1[1]), exp)
st1
starttime <- c(1999,8,1)
endtime <- c(2001,1,1)
starttime <- c(1999,8,1)
endtime <- c(2001,1,1)
st
setPeriod(st, starttime, endtime,tempRes, dts)
tres <- c('1 month', '3 months', '1 day', '1 year')
names(tres) <- c('monthly', 'quarterly', 'daily', 'yearly')
# make sure that image stack covers time period of interest
rstNA <- br[[1]]
rstNA[] <- NA # empty image
startyr <- as.Date(paste0(starttime[1],'-',starttime[2],'-',starttime[3])) # create date object from start date
endyr <- as.Date(paste0(endtime[1],'-',endtime[2],'-',endtime[3]))# create date object from end date
dtstot <- seq(startyr, endyr, by = tres[tempRes])
br
dtsbr
out <- br
npre <- sum(dtstot<min(dtsbr))# missing dates at the start of the study period
npost <- sum(dtstot>max(dtsbr))# missing dates at the end of the study period
if(npre>0){for(i in 1:npre){out <- addLayer(rstNA, out)}}
# else{# add observations at the beginning if needed
# remove observations before the start of the study period if needed
#   ind <- which(dtsbr>=min(dtstot))
#   dtsbr <- dtsbr[ind]
#   out <- out[[ind]]
# }
if(npost>0){for(i in 1:npost){out <- addLayer(out,rstNA)}}
# else{# add observations at the end if needed
#   # remove observations after the end of the study period if needed
#   ind <- which(dtsbr<=max(dtstot))
#   out <- out[[ind]]
# }
out <- out[[which((dtsbr>=min(dtstot)) | (dtsbr<=max(dtstot)))]]# remove observations that fall outside the study period
out
which((dtsbr>=min(dtstot)) | (dtsbr<=max(dtstot)))
install()
r1 <- raster(vals = 1:12, nrows = 3, ncols = 4)
r2 <- raster(vals = 13:24, nrows = 3, ncols = 4)
r3 <- raster(vals = 25:36, nrows = 3, ncols = 4)
r4 <- raster(vals = 37:48, nrows = 3, ncols = 4)
st <- stack(r1,r2,r3,r4)
tempRes <- 'monthly'
dts <- seq(as.Date('2000-01-01'), as.Date('2000-04-01'), by = '1 month')
# case 1 - append start and end
starttime <- c(1999,8,1)
endtime <- c(2001,1,1)
st1 <- setPeriod(st, starttime, endtime,tempRes, dts)
exp <- c(NA, NA, NA, NA, NA,  1, 13, 25, 37, NA, NA, NA, NA, NA, NA, NA, NA, NA)
expect_equal(as.numeric(st1[1]), exp)
starttime <- c(2000,2,1)
endtime <- c(2000,3,1)
st2 <- setPeriod(st, starttime, endtime,tempRes, dts)
tres <- c('1 month', '3 months', '1 day', '1 year')
names(tres) <- c('monthly', 'quarterly', 'daily', 'yearly')
# make sure that image stack covers time period of interest
rstNA <- br[[1]]
rstNA[] <- NA # empty image
startyr <- as.Date(paste0(starttime[1],'-',starttime[2],'-',starttime[3])) # create date object from start date
endyr <- as.Date(paste0(endtime[1],'-',endtime[2],'-',endtime[3]))# create date object from end date
dtstot <- seq(startyr, endyr, by = tres[tempRes])
dtstot
out <- br
out <- out[[which((dtsbr>=min(dtstot)) | (dtsbr<=max(dtstot)))]]# remove observations that fall outside the study period
npre <- sum(dtstot<min(dtsbr))# missing dates at the start of the study period
npost <- sum(dtstot>max(dtsbr))# missing dates at the end of the study period
out
max(dtstot)
min(dtstot)
which((dtsbr>=min(dtstot)) & (dtsbr<=max(dtstot)))
dtsbr
install()
starttime <- c(2000,2,1)
endtime <- c(2000,3,1)
st2 <- setPeriod(st, starttime, endtime,tempRes, dts)
st2
exp <- c(13, 25)
expect_equal(as.numeric(st2[1]), exp)
